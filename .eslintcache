[{"/Users/julianklummer/WebProjects/personal-portfolio/src/index.tsx":"1","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/navbar/Navbar.tsx":"2","/Users/julianklummer/WebProjects/personal-portfolio/src/languages/LanguageHelper.tsx":"3","/Users/julianklummer/WebProjects/personal-portfolio/src/contexts/LanguageContext.tsx":"4","/Users/julianklummer/WebProjects/personal-portfolio/src/components/ContactButton.tsx":"5","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/about/about.tsx":"6","/Users/julianklummer/WebProjects/personal-portfolio/src/components/SkillCard.tsx":"7","/Users/julianklummer/WebProjects/personal-portfolio/src/App.tsx":"8","/Users/julianklummer/WebProjects/personal-portfolio/src/languages/Language.tsx":"9","/Users/julianklummer/WebProjects/personal-portfolio/src/themes/Theme.tsx":"10","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/skills/Skills.tsx":"11","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/bottomnav/BottomNav.tsx":"12","/Users/julianklummer/WebProjects/personal-portfolio/src/themes/ThemeHelper.tsx":"13"},{"size":658,"mtime":1608559114265,"results":"14","hashOfConfig":"15"},{"size":5674,"mtime":1609427063440,"results":"16","hashOfConfig":"15"},{"size":633,"mtime":1609098302080,"results":"17","hashOfConfig":"15"},{"size":740,"mtime":1609100377085,"results":"18","hashOfConfig":"15"},{"size":496,"mtime":1609263869888,"results":"19","hashOfConfig":"15"},{"size":2269,"mtime":1609428435842,"results":"20","hashOfConfig":"15"},{"size":2746,"mtime":1609425939766,"results":"21","hashOfConfig":"15"},{"size":2456,"mtime":1609435179706,"results":"22","hashOfConfig":"15"},{"size":932,"mtime":1609100367159,"results":"23","hashOfConfig":"15"},{"size":2151,"mtime":1609017497839,"results":"24","hashOfConfig":"15"},{"size":1292,"mtime":1609435169556,"results":"25","hashOfConfig":"15"},{"size":821,"mtime":1609261485110,"results":"26","hashOfConfig":"15"},{"size":1653,"mtime":1608543550182,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1anzr79",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/julianklummer/WebProjects/personal-portfolio/src/index.tsx",["57"],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/navbar/Navbar.tsx",["58"],"/Users/julianklummer/WebProjects/personal-portfolio/src/languages/LanguageHelper.tsx",["59","60","61"],"import React, { useState, useContext, useMemo } from 'react';\nimport { dictionaryList } from './Language';\nimport { LanguageContextProvider, LanguageContext } from '../contexts/LanguageContext';\n\nexport const LanguageHelper: React.FC = (props) => {\n    const [userLanguage, setUserLanguage] = useState<'en' | 'de'>('en');\n\n    let dictionary = dictionaryList[userLanguage];\n\n    const languageMemo = useMemo(() => ({\n        userLanguage, setUserLanguage, dictionary\n    }), [userLanguage]);\n\n    return (\n        <LanguageContextProvider value={languageMemo}>\n            {props.children}\n        </LanguageContextProvider>\n    );\n}","/Users/julianklummer/WebProjects/personal-portfolio/src/contexts/LanguageContext.tsx",["62"],"import { createContext } from 'react';\n\ninterface Dictionary {\n  \"contactButton\": string,\n  \"about\": string,\n  \"skillCards\": {\n    \"one\": {\n      \"title\": string,\n      \"skills\": string[],\n      \"levels\": number[]\n    },\n    \"two\": {\n      \"title\": string,\n      \"skills\": string[],\n      \"levels\": number[]\n    },\n    \"three\": {\n      \"title\": string,\n      \"skills\": string[],\n      \"levels\": number[]\n\n    }\n  }\n}\n\ninterface LanguageContext {\n  userLanguage: 'en' | 'de',\n  setUserLanguage: Function,\n  dictionary: Dictionary\n}\n\nexport const LanguageContext = createContext<LanguageContext | null>(null);\n\nexport const LanguageContextProvider = LanguageContext.Provider;\n\nexport const LanguageContextConsumer = LanguageContext.Consumer;\n","/Users/julianklummer/WebProjects/personal-portfolio/src/components/ContactButton.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/about/about.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/components/SkillCard.tsx",["63","64","65"],"/Users/julianklummer/WebProjects/personal-portfolio/src/App.tsx",["66","67"],"import React, { useEffect, useRef } from 'react';\nimport './css/App.scss';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { Navbar } from './domain/navbar/Navbar';\nimport { BottomNav } from './domain/bottomnav/BottomNav';\nimport { ContactButton } from './components/ContactButton';\nimport { About } from './domain/about/about';\nimport { Skills } from './domain/skills/Skills';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    siteContainter: {\n      maxWidth: '1620px',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    scrollContainer: {\n      overflow: 'scroll',\n      height: '90%',\n      width: '100%',\n      maxWidth: '1620px',\n      display: 'block',\n      position: 'absolute',\n      bottom: '0',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    site: {\n      height: '100vh',\n    }\n  }),\n);\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n\n  const scrollPosition = useRef<number>(0);\n\n  const startRef = useRef<any>(null);\n  const skillsRef = useRef<any>(null);\n\n  const motionRef = useRef<boolean>(false);\n\n  const scroll = () => {\n    let container = document.getElementById('scroll-container')!;\n\n    setTimeout(() => {\n      if (container.scrollTop < scrollPosition.current) {\n        console.log(\"Scroll nach oben\");\n        if (startRef.current) {\n          startRef.current.scrollIntoView({behaviour: 'smooth'});\n          motionRef.current = false;\n        }\n      } else if (container.scrollTop > scrollPosition.current) {\n        console.log(\"Scroll nach unten\");\n        if (skillsRef.current) {\n          skillsRef.current.scrollIntoView({behaviour: 'smooth'});\n        }\n      }\n      setTimeout(() => {\n        scrollPosition.current = container.scrollTop;\n      }, 101)\n    \n    }, 100);\n  }\n\n\n  return (\n    <div className={classes.siteContainter}>\n      <Router>\n        <Navbar />\n        <div id=\"scroll-container\" className={classes.scrollContainer} onScroll={scroll}>\n          <div id=\"scroll-content\">\n            <div ref={startRef} className={classes.site}>\n              <About />\n            </div>\n            <div ref={skillsRef} className={classes.site}>\n              <Skills />\n            </div>\n          </div>\n        </div>\n        <BottomNav>\n          <ContactButton />\n        </BottomNav>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","/Users/julianklummer/WebProjects/personal-portfolio/src/languages/Language.tsx",["68","69"],"/Users/julianklummer/WebProjects/personal-portfolio/src/themes/Theme.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/skills/Skills.tsx",["70"],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/bottomnav/BottomNav.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/themes/ThemeHelper.tsx",["71"],{"ruleId":"72","severity":1,"message":"73","line":6,"column":8,"nodeType":"74","messageId":"75","endLine":6,"endColumn":23},{"ruleId":"76","severity":1,"message":"77","line":92,"column":3,"nodeType":"74","endLine":92,"endColumn":12,"suggestions":"78"},{"ruleId":"72","severity":1,"message":"79","line":1,"column":27,"nodeType":"74","messageId":"75","endLine":1,"endColumn":37},{"ruleId":"72","severity":1,"message":"80","line":3,"column":35,"nodeType":"74","messageId":"75","endLine":3,"endColumn":50},{"ruleId":"76","severity":1,"message":"81","line":12,"column":9,"nodeType":"82","endLine":12,"endColumn":23,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":32,"column":14,"nodeType":"74","messageId":"86","endLine":32,"endColumn":29},{"ruleId":"72","severity":1,"message":"87","line":14,"column":7,"nodeType":"74","messageId":"75","endLine":14,"endColumn":24},{"ruleId":"72","severity":1,"message":"88","line":18,"column":7,"nodeType":"74","messageId":"75","endLine":18,"endColumn":26},{"ruleId":"84","severity":1,"message":"89","line":41,"column":14,"nodeType":"74","messageId":"86","endLine":41,"endColumn":44},{"ruleId":"72","severity":1,"message":"90","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"72","severity":1,"message":"91","line":3,"column":35,"nodeType":"74","messageId":"75","endLine":3,"endColumn":40},{"ruleId":"84","severity":1,"message":"92","line":49,"column":14,"nodeType":"74","messageId":"86","endLine":49,"endColumn":28},{"ruleId":"72","severity":1,"message":"93","line":49,"column":14,"nodeType":"74","messageId":"75","endLine":49,"endColumn":28},{"ruleId":"72","severity":1,"message":"79","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":27},{"ruleId":"76","severity":1,"message":"94","line":19,"column":3,"nodeType":"74","endLine":19,"endColumn":12,"suggestions":"95"},"@typescript-eslint/no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setThemeToggle'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [themeContext] as a second argument to the useEffect Hook.",["96"],"'useContext' is defined but never used.","'LanguageContext' is defined but never used.","React Hook useMemo has a missing dependency: 'dictionary'. Either include it or remove the dependency array.","ArrayExpression",["97"],"@typescript-eslint/no-redeclare","'LanguageContext' is already defined.","redeclared","'Checked' is assigned a value but never used.","'Unchecked' is assigned a value but never used.","'SkillCard' is already defined.","'useEffect' is defined but never used.","'Route' is defined but never used.","'dictionaryList' is already defined.","'dictionaryList' is assigned a value but never used.","React Hook useEffect contains a call to 'setDeviceTheme'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [deviceLightTheme] as a second argument to the useEffect Hook.",["98"],{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Add dependencies array: [themeContext]",{"range":"105","text":"106"},"Update the dependencies array to be: [dictionary, userLanguage]",{"range":"107","text":"108"},"Add dependencies array: [deviceLightTheme]",{"range":"109","text":"110"},[3273,3273],", [themeContext]",[475,489],"[dictionary, userLanguage]",[946,946],", [deviceLightTheme]"]