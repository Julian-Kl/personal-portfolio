[{"/Users/julianklummer/WebProjects/personal-portfolio/src/index.tsx":"1","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/navbar/Navbar.tsx":"2","/Users/julianklummer/WebProjects/personal-portfolio/src/languages/LanguageHelper.tsx":"3","/Users/julianklummer/WebProjects/personal-portfolio/src/contexts/LanguageContext.tsx":"4","/Users/julianklummer/WebProjects/personal-portfolio/src/components/ContactButton.tsx":"5","/Users/julianklummer/WebProjects/personal-portfolio/src/components/SkillCard.tsx":"6","/Users/julianklummer/WebProjects/personal-portfolio/src/App.tsx":"7","/Users/julianklummer/WebProjects/personal-portfolio/src/languages/Language.tsx":"8","/Users/julianklummer/WebProjects/personal-portfolio/src/themes/Theme.tsx":"9","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/skills/Skills.tsx":"10","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/bottomnav/BottomNav.tsx":"11","/Users/julianklummer/WebProjects/personal-portfolio/src/themes/ThemeHelper.tsx":"12","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/start/Start.tsx":"13","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/about/About.tsx":"14","/Users/julianklummer/WebProjects/personal-portfolio/src/components/StationCard.tsx":"15","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/contact/Contact.tsx":"16","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/portfolio/Portfolio.tsx":"17"},{"size":658,"mtime":1608559114265,"results":"18","hashOfConfig":"19"},{"size":7847,"mtime":1610015632101,"results":"20","hashOfConfig":"19"},{"size":633,"mtime":1609858690082,"results":"21","hashOfConfig":"19"},{"size":1904,"mtime":1609858673667,"results":"22","hashOfConfig":"19"},{"size":1163,"mtime":1610018108815,"results":"23","hashOfConfig":"19"},{"size":2767,"mtime":1609531501994,"results":"24","hashOfConfig":"19"},{"size":2885,"mtime":1609869040476,"results":"25","hashOfConfig":"19"},{"size":3185,"mtime":1609858678856,"results":"26","hashOfConfig":"19"},{"size":2151,"mtime":1609862466717,"results":"27","hashOfConfig":"19"},{"size":1630,"mtime":1610016244445,"results":"28","hashOfConfig":"19"},{"size":821,"mtime":1609261485110,"results":"29","hashOfConfig":"19"},{"size":1653,"mtime":1608543550182,"results":"30","hashOfConfig":"19"},{"size":2352,"mtime":1609532371085,"results":"31","hashOfConfig":"19"},{"size":2692,"mtime":1610016252165,"results":"32","hashOfConfig":"19"},{"size":6445,"mtime":1609599505070,"results":"33","hashOfConfig":"19"},{"size":2825,"mtime":1610016327916,"results":"34","hashOfConfig":"19"},{"size":7665,"mtime":1610018745336,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1anzr79",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/julianklummer/WebProjects/personal-portfolio/src/index.tsx",["75"],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/navbar/Navbar.tsx",["76"],"/Users/julianklummer/WebProjects/personal-portfolio/src/languages/LanguageHelper.tsx",["77","78","79"],"import React, { useState, useContext, useMemo } from 'react';\nimport { dictionaryList } from './Language';\nimport { LanguageContextProvider, LanguageContext } from '../contexts/LanguageContext';\n\nexport const LanguageHelper: React.FC = (props) => {\n    const [userLanguage, setUserLanguage] = useState<'en' | 'de'>('en');\n\n    let dictionary = dictionaryList[userLanguage];\n\n    const languageMemo = useMemo(() => ({\n        userLanguage, setUserLanguage, dictionary\n    }), [userLanguage]);\n\n    return (\n        <LanguageContextProvider value={languageMemo}>\n            {props.children}\n        </LanguageContextProvider>\n    );\n}","/Users/julianklummer/WebProjects/personal-portfolio/src/contexts/LanguageContext.tsx",["80"],"import { createContext } from 'react';\n\ninterface Dictionary {\n    \"contactButton\": string,\n    \"start\": {\n      \"title\": string,\n      \"headline\": string,\n      \"description\": string\n    },\n    \"about\": {\n      \"title\": string,\n      \"description\": string[],\n      \"stations\": {\n        \"one\": {\n          title: string,\n          institution: string,\n          duration: string,\n          location: string,\n          icon: string,\n          link: string,\n          infos: string[]\n        },\n        \"two\": {\n          title: string,\n          institution: string,\n          duration: string,\n          location: string,\n          icon: string,\n          link: string,\n          infos: string[]\n        },\n        \"three\": {\n          title: string,\n          institution: string,\n          duration: string,\n          location: string,\n          icon: string,\n          link: string,\n          infos: string[]\n        }\n      }\n    },\n    \"skills\": {\n      \"title\": string,\n      \"skillCards\": {\n        \"one\": {\n          \"title\": string,\n          \"skills\": string[],\n          \"levels\": number[]\n        },\n        \"two\": {\n          \"title\": string,\n          \"skills\": string[],\n          \"levels\": number[]\n        },\n        \"three\": {\n          \"title\": string,\n          \"skills\": string[],\n          \"levels\": number[]\n        }\n      }\n    },\n    \"portfolio\": {\n      \"title\": string\n    },\n    \"contact\": {\n      \"title\": string,\n      \"mail\": string,\n      \"telephone\": string\n    },\n    \"legal notice\": {\n      \"title\": string,\n      \"information\": string\n    }\n}\n\ninterface LanguageContext {\n  userLanguage: 'en' | 'de',\n  setUserLanguage: Function,\n  dictionary: Dictionary\n}\n\nexport const LanguageContext = createContext<LanguageContext | null>(null);\n\nexport const LanguageContextProvider = LanguageContext.Provider;\n\nexport const LanguageContextConsumer = LanguageContext.Consumer;\n","/Users/julianklummer/WebProjects/personal-portfolio/src/components/ContactButton.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/components/SkillCard.tsx",["81","82","83"],"import React, { useContext } from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\nimport { LanguageContext } from '../contexts/LanguageContext';\n\nconst Checked: React.FC = () => {\n  return <Brightness1Icon color=\"primary\" />;\n}\n\nconst Unchecked: React.FC = () => {\n  return <RadioButtonUncheckedIcon color=\"primary\" />;\n}\n\ninterface SkillCard {\n  skill: 'one' | 'two' | 'three'\n}\n\ninterface Data {\n  title: string,\n  skills: string[],\n  levels: number[]\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      maxWidth: 752,\n    }\n  }),\n);\n\nexport const SkillCard: React.FC<SkillCard> = (props) => {\n  const classes = useStyles();\n\n  const languageContext = useContext(LanguageContext);\n\n  let data: Data;\n  switch (props.skill) {\n    case \"one\":\n      data = languageContext?.dictionary.skills.skillCards.one!;\n      break;\n    case \"two\":\n      data = languageContext?.dictionary.skills.skillCards.two!;\n      break;\n    case \"three\":\n      data = languageContext?.dictionary.skills.skillCards.three!;\n      break;\n  }\n\n  const title = data.title;\n\n  const generateLevel = (key: number) => {\n\n    const levelDisplay = [];\n\n    for (let i = 0; i <= 4; i++) {\n      if (i < data.levels[key]) {\n        levelDisplay[i] = <Brightness1Icon color=\"primary\" />;\n      } else {\n        levelDisplay[i] = <RadioButtonUncheckedIcon color=\"primary\" />;\n      }\n    }\n\n    return levelDisplay;\n  }\n\n  const generateDivider = (key: number) => {\n    if((key + 1) < data.skills.length){\n      return (<Divider />);\n    } else {\n      return null;\n    }\n  }\n\n  const generateSkill = () => {\n    return data.skills.map((value) =>\n      <React.Fragment>\n        <ListItem>\n          <ListItemText\n            primary={value}\n          />\n          {generateLevel(data.skills.indexOf(value))}\n        </ListItem>\n        {generateDivider(data.skills.indexOf(value))}\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper elevation={3}>\n        <Box pt={2}>\n          <Typography variant=\"h4\" component=\"h3\" align=\"center\">\n            {title}\n          </Typography>\n        </Box>\n        <List>\n          {generateSkill()}\n        </List>\n      </Paper>\n    </div>\n  );\n}","/Users/julianklummer/WebProjects/personal-portfolio/src/App.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/languages/Language.tsx",["84","85"],"/Users/julianklummer/WebProjects/personal-portfolio/src/themes/Theme.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/skills/Skills.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/bottomnav/BottomNav.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/themes/ThemeHelper.tsx",["86"],"import React, { useState, useEffect, useMemo } from 'react';\nimport { useStyles, getTheme, light, dark } from './Theme';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { ThemeContextProvider } from '../contexts/ThemeContext';\n\nexport const ThemeHelper: React.FC = (props) => {\n  const [deviceTheme, setDeviceTheme] = useState('dark');\n  const [theme, setTheme] = useState<'light' | 'dark'>('dark');\n  const [appliedTheme, setAppliedTheme] = useState(getTheme(dark));\n\n  const themeMemo = useMemo(() => ({ theme, setTheme }), [theme, setTheme]);\n\n  const classes = useStyles();\n\n  const deviceLightTheme = useMediaQuery('(prefers-color-scheme: light)');\n  // Default theme mode by device\n  useEffect(() => {\n    if (deviceLightTheme) {\n      setDeviceTheme('light');\n    } else {\n      setDeviceTheme('dark');\n    }\n  });\n\n  // Changes theme mode if device preference changes\n  useEffect(() => {\n    if (deviceTheme === 'light') {\n      setTheme('light');\n    } else {\n      setTheme('dark');\n    }\n  }, [deviceTheme]);\n\n  // Change theme onsite\n  useEffect(() => {\n    if (theme === 'light') {\n      setAppliedTheme(getTheme(light));\n    } else {\n      setAppliedTheme(getTheme(dark));\n    }\n  }, [theme]);\n\n  return (\n    <div className={theme === 'light' ? classes.backgroundLight : classes.backgroundDark}>\n      <ThemeProvider theme={appliedTheme}>\n        <ThemeContextProvider value={themeMemo}>\n          {props.children}\n        </ThemeContextProvider>\n        <CssBaseline />\n      </ThemeProvider>\n    </div>\n  );\n}",["87","88"],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/start/Start.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/about/About.tsx",["89"],"/Users/julianklummer/WebProjects/personal-portfolio/src/components/StationCard.tsx",["90","91"],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/contact/Contact.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/portfolio/Portfolio.tsx",[],{"ruleId":"92","severity":1,"message":"93","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":23},{"ruleId":"96","severity":1,"message":"97","line":104,"column":3,"nodeType":"94","endLine":104,"endColumn":12,"suggestions":"98"},{"ruleId":"92","severity":1,"message":"99","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":37},{"ruleId":"92","severity":1,"message":"100","line":3,"column":35,"nodeType":"94","messageId":"95","endLine":3,"endColumn":50},{"ruleId":"96","severity":1,"message":"101","line":12,"column":9,"nodeType":"102","endLine":12,"endColumn":23,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":83,"column":14,"nodeType":"94","messageId":"106","endLine":83,"endColumn":29},{"ruleId":"92","severity":1,"message":"107","line":14,"column":7,"nodeType":"94","messageId":"95","endLine":14,"endColumn":24},{"ruleId":"92","severity":1,"message":"108","line":18,"column":7,"nodeType":"94","messageId":"95","endLine":18,"endColumn":26},{"ruleId":"104","severity":1,"message":"109","line":41,"column":14,"nodeType":"94","messageId":"106","endLine":41,"endColumn":44},{"ruleId":"104","severity":1,"message":"110","line":153,"column":14,"nodeType":"94","messageId":"106","endLine":153,"endColumn":28},{"ruleId":"92","severity":1,"message":"111","line":153,"column":14,"nodeType":"94","messageId":"95","endLine":153,"endColumn":28},{"ruleId":"96","severity":1,"message":"112","line":19,"column":3,"nodeType":"94","endLine":19,"endColumn":12,"suggestions":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"92","severity":1,"message":"118","line":39,"column":11,"nodeType":"94","messageId":"95","endLine":39,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":93,"column":17,"nodeType":"121","messageId":"122","endLine":93,"endColumn":23},{"ruleId":"119","severity":1,"message":"120","line":96,"column":17,"nodeType":"121","messageId":"122","endLine":96,"endColumn":23},"@typescript-eslint/no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setThemeToggle'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [themeContext] as a second argument to the useEffect Hook.",["123"],"'useContext' is defined but never used.","'LanguageContext' is defined but never used.","React Hook useMemo has a missing dependency: 'dictionary'. Either include it or remove the dependency array.","ArrayExpression",["124"],"@typescript-eslint/no-redeclare","'LanguageContext' is already defined.","redeclared","'Checked' is assigned a value but never used.","'Unchecked' is assigned a value but never used.","'SkillCard' is already defined.","'dictionaryList' is already defined.","'dictionaryList' is assigned a value but never used.","React Hook useEffect contains a call to 'setDeviceTheme'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [deviceLightTheme] as a second argument to the useEffect Hook.",["125"],"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"'stations' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"no-global-assign","no-unsafe-negation","Add dependencies array: [themeContext]",{"range":"134","text":"135"},"Update the dependencies array to be: [dictionary, userLanguage]",{"range":"136","text":"137"},"Add dependencies array: [deviceLightTheme]",{"range":"138","text":"139"},[3803,3803],", [themeContext]",[475,489],"[dictionary, userLanguage]",[946,946],", [deviceLightTheme]"]