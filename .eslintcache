[{"/Users/julianklummer/WebProjects/personal-portfolio/src/index.tsx":"1","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/navbar/Navbar.tsx":"2","/Users/julianklummer/WebProjects/personal-portfolio/src/languages/LanguageHelper.tsx":"3","/Users/julianklummer/WebProjects/personal-portfolio/src/contexts/LanguageContext.tsx":"4","/Users/julianklummer/WebProjects/personal-portfolio/src/components/ContactButton.tsx":"5","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/about/about.tsx":"6","/Users/julianklummer/WebProjects/personal-portfolio/src/components/SkillCard.tsx":"7","/Users/julianklummer/WebProjects/personal-portfolio/src/App.tsx":"8","/Users/julianklummer/WebProjects/personal-portfolio/src/languages/Language.tsx":"9","/Users/julianklummer/WebProjects/personal-portfolio/src/themes/Theme.tsx":"10","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/skills/Skills.tsx":"11","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/bottomnav/BottomNav.tsx":"12"},{"size":658,"mtime":1608559114265,"results":"13","hashOfConfig":"14"},{"size":5674,"mtime":1609262510991,"results":"15","hashOfConfig":"14"},{"size":633,"mtime":1609098302080,"results":"16","hashOfConfig":"14"},{"size":740,"mtime":1609100377085,"results":"17","hashOfConfig":"14"},{"size":496,"mtime":1609263869888,"results":"18","hashOfConfig":"14"},{"size":2269,"mtime":1609017494864,"results":"19","hashOfConfig":"14"},{"size":2746,"mtime":1609251131359,"results":"20","hashOfConfig":"14"},{"size":1324,"mtime":1609261422485,"results":"21","hashOfConfig":"14"},{"size":932,"mtime":1609100367159,"results":"22","hashOfConfig":"14"},{"size":2151,"mtime":1609017497839,"results":"23","hashOfConfig":"14"},{"size":1093,"mtime":1609152410199,"results":"24","hashOfConfig":"14"},{"size":821,"mtime":1609261485110,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1anzr79",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/julianklummer/WebProjects/personal-portfolio/src/index.tsx",["52"],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/navbar/Navbar.tsx",["53"],"/Users/julianklummer/WebProjects/personal-portfolio/src/languages/LanguageHelper.tsx",["54","55","56"],"import React, { useState, useContext, useMemo } from 'react';\nimport { dictionaryList } from './Language';\nimport { LanguageContextProvider, LanguageContext } from '../contexts/LanguageContext';\n\nexport const LanguageHelper: React.FC = (props) => {\n    const [userLanguage, setUserLanguage] = useState<'en' | 'de'>('en');\n\n    let dictionary = dictionaryList[userLanguage];\n\n    const languageMemo = useMemo(() => ({\n        userLanguage, setUserLanguage, dictionary\n    }), [userLanguage]);\n\n    return (\n        <LanguageContextProvider value={languageMemo}>\n            {props.children}\n        </LanguageContextProvider>\n    );\n}","/Users/julianklummer/WebProjects/personal-portfolio/src/contexts/LanguageContext.tsx",["57"],"import { createContext } from 'react';\n\ninterface Dictionary {\n  \"contactButton\": string,\n  \"about\": string,\n  \"skillCards\": {\n    \"one\": {\n      \"title\": string,\n      \"skills\": string[],\n      \"levels\": number[]\n    },\n    \"two\": {\n      \"title\": string,\n      \"skills\": string[],\n      \"levels\": number[]\n    },\n    \"three\": {\n      \"title\": string,\n      \"skills\": string[],\n      \"levels\": number[]\n\n    }\n  }\n}\n\ninterface LanguageContext {\n  userLanguage: 'en' | 'de',\n  setUserLanguage: Function,\n  dictionary: Dictionary\n}\n\nexport const LanguageContext = createContext<LanguageContext | null>(null);\n\nexport const LanguageContextProvider = LanguageContext.Provider;\n\nexport const LanguageContextConsumer = LanguageContext.Consumer;\n","/Users/julianklummer/WebProjects/personal-portfolio/src/components/ContactButton.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/about/about.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/components/SkillCard.tsx",["58","59","60"],"/Users/julianklummer/WebProjects/personal-portfolio/src/App.tsx",["61","62"],"/Users/julianklummer/WebProjects/personal-portfolio/src/languages/Language.tsx",["63","64"],"/Users/julianklummer/WebProjects/personal-portfolio/src/themes/Theme.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/skills/Skills.tsx",["65"],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/bottomnav/BottomNav.tsx",[],{"ruleId":"66","severity":1,"message":"67","line":6,"column":8,"nodeType":"68","messageId":"69","endLine":6,"endColumn":23},{"ruleId":"70","severity":1,"message":"71","line":92,"column":3,"nodeType":"68","endLine":92,"endColumn":12,"suggestions":"72"},{"ruleId":"66","severity":1,"message":"73","line":1,"column":27,"nodeType":"68","messageId":"69","endLine":1,"endColumn":37},{"ruleId":"66","severity":1,"message":"74","line":3,"column":35,"nodeType":"68","messageId":"69","endLine":3,"endColumn":50},{"ruleId":"70","severity":1,"message":"75","line":12,"column":9,"nodeType":"76","endLine":12,"endColumn":23,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":32,"column":14,"nodeType":"68","messageId":"80","endLine":32,"endColumn":29},{"ruleId":"66","severity":1,"message":"81","line":14,"column":7,"nodeType":"68","messageId":"69","endLine":14,"endColumn":24},{"ruleId":"66","severity":1,"message":"82","line":18,"column":7,"nodeType":"68","messageId":"69","endLine":18,"endColumn":26},{"ruleId":"78","severity":1,"message":"83","line":41,"column":14,"nodeType":"68","messageId":"80","endLine":41,"endColumn":44},{"ruleId":"66","severity":1,"message":"73","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":27},{"ruleId":"66","severity":1,"message":"84","line":6,"column":10,"nodeType":"68","messageId":"69","endLine":6,"endColumn":19},{"ruleId":"78","severity":1,"message":"85","line":49,"column":14,"nodeType":"68","messageId":"80","endLine":49,"endColumn":28},{"ruleId":"66","severity":1,"message":"86","line":49,"column":14,"nodeType":"68","messageId":"69","endLine":49,"endColumn":28},{"ruleId":"66","severity":1,"message":"73","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":27},"@typescript-eslint/no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setThemeToggle'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [themeContext] as a second argument to the useEffect Hook.",["87"],"'useContext' is defined but never used.","'LanguageContext' is defined but never used.","React Hook useMemo has a missing dependency: 'dictionary'. Either include it or remove the dependency array.","ArrayExpression",["88"],"@typescript-eslint/no-redeclare","'LanguageContext' is already defined.","redeclared","'Checked' is assigned a value but never used.","'Unchecked' is assigned a value but never used.","'SkillCard' is already defined.","'BottomNav' is defined but never used.","'dictionaryList' is already defined.","'dictionaryList' is assigned a value but never used.",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Add dependencies array: [themeContext]",{"range":"93","text":"94"},"Update the dependencies array to be: [dictionary, userLanguage]",{"range":"95","text":"96"},[3273,3273],", [themeContext]",[475,489],"[dictionary, userLanguage]"]