[{"/Users/julianklummer/WebProjects/personal-portfolio/src/index.tsx":"1","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/navbar/Navbar.tsx":"2","/Users/julianklummer/WebProjects/personal-portfolio/src/languages/LanguageHelper.tsx":"3","/Users/julianklummer/WebProjects/personal-portfolio/src/contexts/LanguageContext.tsx":"4","/Users/julianklummer/WebProjects/personal-portfolio/src/components/ContactButton.tsx":"5","/Users/julianklummer/WebProjects/personal-portfolio/src/components/SkillCard.tsx":"6","/Users/julianklummer/WebProjects/personal-portfolio/src/App.tsx":"7","/Users/julianklummer/WebProjects/personal-portfolio/src/languages/Language.tsx":"8","/Users/julianklummer/WebProjects/personal-portfolio/src/themes/Theme.tsx":"9","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/skills/Skills.tsx":"10","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/bottomnav/BottomNav.tsx":"11","/Users/julianklummer/WebProjects/personal-portfolio/src/themes/ThemeHelper.tsx":"12","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/start/Start.tsx":"13","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/about/About.tsx":"14","/Users/julianklummer/WebProjects/personal-portfolio/src/components/StationCard.tsx":"15","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/contact/Contact.tsx":"16","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/portfolio/Portfolio.tsx":"17","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/legalNotice/LegalNotice.tsx":"18","/Users/julianklummer/WebProjects/personal-portfolio/src/contexts/ThemeContext.tsx":"19"},{"size":658,"mtime":1608559114265,"results":"20","hashOfConfig":"21"},{"size":9088,"mtime":1610206841011,"results":"22","hashOfConfig":"21"},{"size":633,"mtime":1609858690082,"results":"23","hashOfConfig":"21"},{"size":1903,"mtime":1610053574341,"results":"24","hashOfConfig":"21"},{"size":1163,"mtime":1610018108815,"results":"25","hashOfConfig":"21"},{"size":2767,"mtime":1609531501994,"results":"26","hashOfConfig":"21"},{"size":3922,"mtime":1610206850220,"results":"27","hashOfConfig":"21"},{"size":3183,"mtime":1610053575855,"results":"28","hashOfConfig":"21"},{"size":2155,"mtime":1610207240593,"results":"29","hashOfConfig":"21"},{"size":1630,"mtime":1610016244445,"results":"30","hashOfConfig":"21"},{"size":821,"mtime":1609261485110,"results":"31","hashOfConfig":"21"},{"size":1653,"mtime":1608543550182,"results":"32","hashOfConfig":"21"},{"size":2352,"mtime":1609532371085,"results":"33","hashOfConfig":"21"},{"size":2732,"mtime":1610037399449,"results":"34","hashOfConfig":"21"},{"size":6445,"mtime":1609599505070,"results":"35","hashOfConfig":"21"},{"size":2825,"mtime":1610016327916,"results":"36","hashOfConfig":"21"},{"size":8146,"mtime":1610116474241,"results":"37","hashOfConfig":"21"},{"size":3766,"mtime":1610057927570,"results":"38","hashOfConfig":"21"},{"size":328,"mtime":1608479434416,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"1anzr79",{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/julianklummer/WebProjects/personal-portfolio/src/index.tsx",["85"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { LanguageHelper } from './languages/LanguageHelper';\nimport { ThemeHelper } from './themes/ThemeHelper';\n\nReactDOM.render(\n  <React.StrictMode>\n    <LanguageHelper>\n      <ThemeHelper>\n        <App />\n      </ThemeHelper>\n    </LanguageHelper>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// reportWebVitals(console.log);  // Prints the performance of the site in the console\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n",["86","87"],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/navbar/Navbar.tsx",["88","89","90"],"/Users/julianklummer/WebProjects/personal-portfolio/src/languages/LanguageHelper.tsx",["91","92","93"],"import React, { useState, useContext, useMemo } from 'react';\nimport { dictionaryList } from './Language';\nimport { LanguageContextProvider, LanguageContext } from '../contexts/LanguageContext';\n\nexport const LanguageHelper: React.FC = (props) => {\n    const [userLanguage, setUserLanguage] = useState<'en' | 'de'>('en');\n\n    let dictionary = dictionaryList[userLanguage];\n\n    const languageMemo = useMemo(() => ({\n        userLanguage, setUserLanguage, dictionary\n    }), [userLanguage]);\n\n    return (\n        <LanguageContextProvider value={languageMemo}>\n            {props.children}\n        </LanguageContextProvider>\n    );\n}","/Users/julianklummer/WebProjects/personal-portfolio/src/contexts/LanguageContext.tsx",["94"],"/Users/julianklummer/WebProjects/personal-portfolio/src/components/ContactButton.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/components/SkillCard.tsx",["95","96","97"],"import React, { useContext } from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\nimport { LanguageContext } from '../contexts/LanguageContext';\n\nconst Checked: React.FC = () => {\n  return <Brightness1Icon color=\"primary\" />;\n}\n\nconst Unchecked: React.FC = () => {\n  return <RadioButtonUncheckedIcon color=\"primary\" />;\n}\n\ninterface SkillCard {\n  skill: 'one' | 'two' | 'three'\n}\n\ninterface Data {\n  title: string,\n  skills: string[],\n  levels: number[]\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      maxWidth: 752,\n    }\n  }),\n);\n\nexport const SkillCard: React.FC<SkillCard> = (props) => {\n  const classes = useStyles();\n\n  const languageContext = useContext(LanguageContext);\n\n  let data: Data;\n  switch (props.skill) {\n    case \"one\":\n      data = languageContext?.dictionary.skills.skillCards.one!;\n      break;\n    case \"two\":\n      data = languageContext?.dictionary.skills.skillCards.two!;\n      break;\n    case \"three\":\n      data = languageContext?.dictionary.skills.skillCards.three!;\n      break;\n  }\n\n  const title = data.title;\n\n  const generateLevel = (key: number) => {\n\n    const levelDisplay = [];\n\n    for (let i = 0; i <= 4; i++) {\n      if (i < data.levels[key]) {\n        levelDisplay[i] = <Brightness1Icon color=\"primary\" />;\n      } else {\n        levelDisplay[i] = <RadioButtonUncheckedIcon color=\"primary\" />;\n      }\n    }\n\n    return levelDisplay;\n  }\n\n  const generateDivider = (key: number) => {\n    if((key + 1) < data.skills.length){\n      return (<Divider />);\n    } else {\n      return null;\n    }\n  }\n\n  const generateSkill = () => {\n    return data.skills.map((value) =>\n      <React.Fragment>\n        <ListItem>\n          <ListItemText\n            primary={value}\n          />\n          {generateLevel(data.skills.indexOf(value))}\n        </ListItem>\n        {generateDivider(data.skills.indexOf(value))}\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper elevation={3}>\n        <Box pt={2}>\n          <Typography variant=\"h4\" component=\"h3\" align=\"center\">\n            {title}\n          </Typography>\n        </Box>\n        <List>\n          {generateSkill()}\n        </List>\n      </Paper>\n    </div>\n  );\n}","/Users/julianklummer/WebProjects/personal-portfolio/src/App.tsx",["98","99"],"/Users/julianklummer/WebProjects/personal-portfolio/src/languages/Language.tsx",["100","101"],"/Users/julianklummer/WebProjects/personal-portfolio/src/themes/Theme.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/skills/Skills.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/bottomnav/BottomNav.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/themes/ThemeHelper.tsx",["102"],"import React, { useState, useEffect, useMemo } from 'react';\nimport { useStyles, getTheme, light, dark } from './Theme';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { ThemeContextProvider } from '../contexts/ThemeContext';\n\nexport const ThemeHelper: React.FC = (props) => {\n  const [deviceTheme, setDeviceTheme] = useState('dark');\n  const [theme, setTheme] = useState<'light' | 'dark'>('dark');\n  const [appliedTheme, setAppliedTheme] = useState(getTheme(dark));\n\n  const themeMemo = useMemo(() => ({ theme, setTheme }), [theme, setTheme]);\n\n  const classes = useStyles();\n\n  const deviceLightTheme = useMediaQuery('(prefers-color-scheme: light)');\n  // Default theme mode by device\n  useEffect(() => {\n    if (deviceLightTheme) {\n      setDeviceTheme('light');\n    } else {\n      setDeviceTheme('dark');\n    }\n  });\n\n  // Changes theme mode if device preference changes\n  useEffect(() => {\n    if (deviceTheme === 'light') {\n      setTheme('light');\n    } else {\n      setTheme('dark');\n    }\n  }, [deviceTheme]);\n\n  // Change theme onsite\n  useEffect(() => {\n    if (theme === 'light') {\n      setAppliedTheme(getTheme(light));\n    } else {\n      setAppliedTheme(getTheme(dark));\n    }\n  }, [theme]);\n\n  return (\n    <div className={theme === 'light' ? classes.backgroundLight : classes.backgroundDark}>\n      <ThemeProvider theme={appliedTheme}>\n        <ThemeContextProvider value={themeMemo}>\n          {props.children}\n        </ThemeContextProvider>\n        <CssBaseline />\n      </ThemeProvider>\n    </div>\n  );\n}",["103","104"],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/start/Start.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/about/About.tsx",["105"],"import React, { useContext } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport { Typography } from '@material-ui/core';\nimport { LanguageContext } from '../../contexts/LanguageContext';\nimport { StationCard } from '../../components/StationCard';\nimport IMGProfil from '../../assets/images/about/profil.jpg';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        img: {\n            width: '100%',\n            height: 'auto',\n            borderRadius: '50%',\n            overflow: 'hidden'\n        },\n        typo: {\n            marginBottom: 20\n        },\n        headline: {\n            [theme.breakpoints.down('sm')]: {\n              fontSize: '4em',\n            }\n        }\n    }),\n);\n\nexport const About: React.FC = () => {\n    const classes = useStyles();\n\n    const languageContext = useContext(LanguageContext);\n\n    const title = languageContext?.dictionary.about.title!;\n    const description = languageContext?.dictionary.about.description!;\n    const stations = languageContext?.dictionary.about.stations!;\n\n    return (\n        <Box m={4}>\n            <div className={classes.root}>\n                <Box mb={3}>\n                    <Typography component=\"h2\" variant=\"h1\" color=\"textPrimary\" className={classes.headline}>{title}</Typography>\n                </Box>\n                <Grid container spacing={3} justify=\"center\">\n                    <Grid item lg={3} md={5} sm={10} xs={12}>\n                        <img src={IMGProfil} alt=\"Julian Klummer\" className={classes.img}></img>\n                    </Grid>\n                    <Grid item lg={4} md={5} sm={10} xs={12}>\n                        <Typography component=\"p\" variant=\"body1\" color=\"textPrimary\" className={classes.typo}>\n                            {description[0]}\n                        </Typography>\n                        <Typography component=\"p\" variant=\"body1\" color=\"textPrimary\" className={classes.typo}>\n                            {description[1]}\n                        </Typography>\n                        <Typography component=\"p\" variant=\"body1\" color=\"textPrimary\" className={classes.typo}>\n                            {description[2]}\n                        </Typography>\n                    </Grid>\n                    <Grid item lg={5} md={10} sm={10} xs={12}>\n                        <StationCard station={\"one\"} />\n                        <StationCard station={\"two\"} />\n                        <StationCard station={\"three\"} />\n                    </Grid>\n                </Grid>\n            </div>\n        </Box>\n    );\n}","/Users/julianklummer/WebProjects/personal-portfolio/src/components/StationCard.tsx",["106","107"],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/contact/Contact.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/portfolio/Portfolio.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/legalNotice/LegalNotice.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/contexts/ThemeContext.tsx",["108","109","110"],{"ruleId":"111","severity":1,"message":"112","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":23},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"111","severity":1,"message":"119","line":1,"column":50,"nodeType":"113","messageId":"114","endLine":1,"endColumn":56},{"ruleId":"111","severity":1,"message":"120","line":12,"column":8,"nodeType":"113","messageId":"114","endLine":12,"endColumn":14},{"ruleId":"121","severity":1,"message":"122","line":129,"column":3,"nodeType":"113","endLine":129,"endColumn":12,"suggestions":"123"},{"ruleId":"111","severity":1,"message":"124","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":37},{"ruleId":"111","severity":1,"message":"125","line":3,"column":35,"nodeType":"113","messageId":"114","endLine":3,"endColumn":50},{"ruleId":"121","severity":1,"message":"126","line":12,"column":9,"nodeType":"127","endLine":12,"endColumn":23,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":83,"column":14,"nodeType":"113","messageId":"131","endLine":83,"endColumn":29},{"ruleId":"111","severity":1,"message":"132","line":14,"column":7,"nodeType":"113","messageId":"114","endLine":14,"endColumn":24},{"ruleId":"111","severity":1,"message":"133","line":18,"column":7,"nodeType":"113","messageId":"114","endLine":18,"endColumn":26},{"ruleId":"129","severity":1,"message":"134","line":41,"column":14,"nodeType":"113","messageId":"131","endLine":41,"endColumn":44},{"ruleId":"111","severity":1,"message":"135","line":3,"column":50,"nodeType":"113","messageId":"114","endLine":3,"endColumn":58},{"ruleId":"111","severity":1,"message":"136","line":3,"column":60,"nodeType":"113","messageId":"114","endLine":3,"endColumn":71},{"ruleId":"129","severity":1,"message":"137","line":153,"column":14,"nodeType":"113","messageId":"131","endLine":153,"endColumn":28},{"ruleId":"111","severity":1,"message":"138","line":153,"column":14,"nodeType":"113","messageId":"114","endLine":153,"endColumn":28},{"ruleId":"121","severity":1,"message":"139","line":19,"column":3,"nodeType":"113","endLine":19,"endColumn":12,"suggestions":"140"},{"ruleId":"115","replacedBy":"141"},{"ruleId":"117","replacedBy":"142"},{"ruleId":"111","severity":1,"message":"143","line":40,"column":11,"nodeType":"113","messageId":"114","endLine":40,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":93,"column":17,"nodeType":"146","messageId":"147","endLine":93,"endColumn":23},{"ruleId":"144","severity":1,"message":"145","line":96,"column":17,"nodeType":"146","messageId":"147","endLine":96,"endColumn":23},{"ruleId":"111","severity":1,"message":"148","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":13},{"ruleId":"111","severity":1,"message":"149","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"150","line":8,"column":14,"nodeType":"113","messageId":"131","endLine":8,"endColumn":26},"@typescript-eslint/no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["151"],"no-negated-in-lhs",["152"],"'useRef' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setThemeToggle'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [themeContext] as a second argument to the useEffect Hook.",["153"],"'useContext' is defined but never used.","'LanguageContext' is defined but never used.","React Hook useMemo has a missing dependency: 'dictionary'. Either include it or remove the dependency array.","ArrayExpression",["154"],"@typescript-eslint/no-redeclare","'LanguageContext' is already defined.","redeclared","'Checked' is assigned a value but never used.","'Unchecked' is assigned a value but never used.","'SkillCard' is already defined.","'Redirect' is defined but never used.","'useLocation' is defined but never used.","'dictionaryList' is already defined.","'dictionaryList' is assigned a value but never used.","React Hook useEffect contains a call to 'setDeviceTheme'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [deviceLightTheme] as a second argument to the useEffect Hook.",["155"],["151"],["152"],"'stations' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'React' is defined but never used.","'useState' is defined but never used.","'ThemeContext' is already defined.","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Add dependencies array: [themeContext]",{"range":"162","text":"163"},"Update the dependencies array to be: [dictionary, userLanguage]",{"range":"164","text":"165"},"Add dependencies array: [deviceLightTheme]",{"range":"166","text":"167"},[4600,4600],", [themeContext]",[475,489],"[dictionary, userLanguage]",[946,946],", [deviceLightTheme]"]