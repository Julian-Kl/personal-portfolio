[{"/Users/julianklummer/WebProjects/personal-portfolio/src/index.tsx":"1","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/navbar/Navbar.tsx":"2","/Users/julianklummer/WebProjects/personal-portfolio/src/languages/LanguageHelper.tsx":"3","/Users/julianklummer/WebProjects/personal-portfolio/src/contexts/LanguageContext.tsx":"4","/Users/julianklummer/WebProjects/personal-portfolio/src/components/ContactButton.tsx":"5","/Users/julianklummer/WebProjects/personal-portfolio/src/components/SkillCard.tsx":"6","/Users/julianklummer/WebProjects/personal-portfolio/src/App.tsx":"7","/Users/julianklummer/WebProjects/personal-portfolio/src/languages/Language.tsx":"8","/Users/julianklummer/WebProjects/personal-portfolio/src/themes/Theme.tsx":"9","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/skills/Skills.tsx":"10","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/bottomnav/BottomNav.tsx":"11","/Users/julianklummer/WebProjects/personal-portfolio/src/themes/ThemeHelper.tsx":"12","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/start/Start.tsx":"13","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/about/About.tsx":"14","/Users/julianklummer/WebProjects/personal-portfolio/src/components/StationCard.tsx":"15","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/contact/Contact.tsx":"16","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/portfolio/Portfolio.tsx":"17","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/legalNotice/LegalNotice.tsx":"18","/Users/julianklummer/WebProjects/personal-portfolio/src/contexts/ThemeContext.tsx":"19"},{"size":658,"mtime":1610214958774,"results":"20","hashOfConfig":"21"},{"size":8882,"mtime":1610217065499,"results":"22","hashOfConfig":"21"},{"size":633,"mtime":1610214958776,"results":"23","hashOfConfig":"21"},{"size":1903,"mtime":1610053574341,"results":"24","hashOfConfig":"21"},{"size":1163,"mtime":1610214958772,"results":"25","hashOfConfig":"21"},{"size":2767,"mtime":1609531501994,"results":"26","hashOfConfig":"21"},{"size":4684,"mtime":1610217037104,"results":"27","hashOfConfig":"21"},{"size":3183,"mtime":1610053575855,"results":"28","hashOfConfig":"21"},{"size":2155,"mtime":1610207240593,"results":"29","hashOfConfig":"21"},{"size":1630,"mtime":1610016244445,"results":"30","hashOfConfig":"21"},{"size":821,"mtime":1609261485110,"results":"31","hashOfConfig":"21"},{"size":1653,"mtime":1608543550182,"results":"32","hashOfConfig":"21"},{"size":2352,"mtime":1609532371085,"results":"33","hashOfConfig":"21"},{"size":2732,"mtime":1610037399449,"results":"34","hashOfConfig":"21"},{"size":6445,"mtime":1609599505070,"results":"35","hashOfConfig":"21"},{"size":2825,"mtime":1610016327916,"results":"36","hashOfConfig":"21"},{"size":8146,"mtime":1610116474241,"results":"37","hashOfConfig":"21"},{"size":3766,"mtime":1610057927570,"results":"38","hashOfConfig":"21"},{"size":328,"mtime":1610214958773,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1anzr79",{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/julianklummer/WebProjects/personal-portfolio/src/index.tsx",["89"],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/navbar/Navbar.tsx",["90","91","92","93","94"],"import React, { useState, useContext, useEffect, useRef } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport FormControl from '@material-ui/core/FormControl';\nimport Box from '@material-ui/core/Box';\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport { ThemeContext } from '../../contexts/ThemeContext';\nimport { LanguageContext } from '../../contexts/LanguageContext';\nimport { ContactButton } from '../../components/ContactButton';\nimport Grow from '@material-ui/core/Grow';\nimport { NavLink } from \"react-router-dom\";\nimport AppBar from '@material-ui/core/AppBar';\n\ninterface Props {\n  navigation: (target: \"start\" | \"about\" | \"skills\" | \"portfolio\" | \"contact\" | \"legalNotice\") => any,\n  siteContainer: string,\n  background: boolean\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    collapse: {\n      [theme.breakpoints.down('xs')]: {\n        display: 'none',\n      },\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: '20ch',\n      }\n    },\n    contactButton: {\n      [theme.breakpoints.up('lg')]: {\n        display: 'none'\n      }\n    },\n    translateIcon: {\n      marginRight: 8\n    },\n    link: {\n      textDecoration: 'none',\n      color: theme.palette.text.primary\n    }\n  })\n);\n\nexport const Navbar: React.FC<Props> = (props) => {\n  const classes = useStyles();\n  const [anchorMainMenu, setAnchorMainMenu] = useState<null | HTMLElement>(null);\n  const [anchorLanguageMenu, setLanguageMenu] = useState<null | HTMLElement>(null);\n  const [themeToggle, setThemeToggle] = useState<boolean>(true);\n\n  const [backgroundColor, setBackgroundColor] = useState<'default' | 'inherit' | 'primary' | 'secondary' | 'transparent'>(\"transparent\");\n  const [navbarElevation, setNavbarElevation] = useState<number>(0);\n\n  useEffect(() => {\n    if (props.background) {\n      setBackgroundColor(\"secondary\");\n      setNavbarElevation(3);\n    } else {\n      setBackgroundColor(\"transparent\");\n      setNavbarElevation(0);\n    }\n  }, [props.background])\n\n  const themeContext = useContext(ThemeContext);\n  const languageContext = useContext(LanguageContext);\n\n  const itemOne = languageContext?.dictionary.start.title!;\n  const itemTwo = languageContext?.dictionary.about.title!;\n  const itemThree = languageContext?.dictionary.skills.title!;\n  const itemFour = languageContext?.dictionary.portfolio.title!;\n  const itemFive = languageContext?.dictionary.contact.title!;\n  const itemSix = languageContext?.dictionary.legalNotice.title!;\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    let target = event.currentTarget.getAttribute('aria-controls');\n    if (target === 'main-menu') {\n      setAnchorMainMenu(event.currentTarget);\n    } else if (target === 'language-menu') {\n      setLanguageMenu(event.currentTarget);\n    } else {\n      console.log(\"Error: aria-control target of button is set to a value to which no menu exists.\")\n    }\n  };\n\n  const handleClose = () => {\n    setAnchorMainMenu(null);\n    setLanguageMenu(null);\n  };\n\n  const changeTheme = () => {\n    if (themeContext) {\n      if (themeContext.theme === 'dark') {\n        setThemeToggle(false)\n        themeContext.setTheme('light')\n      } else {\n        setThemeToggle(true)\n        themeContext.setTheme('dark')\n      }\n    } else {\n      console.log('Theme Context Error: Neither default value or device value are set.')\n    }\n  };\n\n  useEffect(() => {\n    if (themeContext) {\n      if (themeContext.theme === 'dark') {\n        setThemeToggle(false)\n      } else {\n        setThemeToggle(true)\n      }\n    } else {\n      console.log('Theme Context Error: Neither default value or device value are set.')\n    }\n  });\n\n  let languageLabel = 'Language';\n  if (languageContext?.userLanguage === 'en') {\n    languageLabel = 'English';\n  } else {\n    languageLabel = 'Deutsch';\n  }\n\n  const changeLanguage = (props: string) => {\n    languageContext?.setUserLanguage(props)\n  }\n\n  const renderContactButton = () => {\n    return (\n      <Grow\n        in={true}\n        style={{ transformOrigin: '0 0 0' }}\n        {... { timeout: 2000 }}\n      >\n        <Box mx=\"auto\" className={classes.contactButton}>\n          <ContactButton navigation={props.navigation} />\n        </Box>\n      </Grow>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"fixed\" color={backgroundColor} elevation={navbarElevation} className={props.siteContainer}>\n        <Toolbar>\n          <Grow\n            in={true}\n            style={{ transformOrigin: '0 0 0' }}\n            {... { timeout: 1000 }}\n          >\n            <IconButton\n              className={classes.menuButton}\n              aria-controls=\"main-menu\"\n              aria-haspopup=\"true\"\n              onClick={handleClick}\n            >\n              <MenuIcon fontSize=\"large\" />\n            </IconButton>\n          </Grow>\n          <Menu\n            id=\"main-menu\"\n            anchorEl={anchorMainMenu}\n            keepMounted\n            open={Boolean(anchorMainMenu)}\n            onClose={handleClose}\n          >\n            <MenuItem onClick={() => {\n              handleClose();\n              props.navigation(\"start\");\n            }}>{itemOne}</MenuItem>\n            <MenuItem onClick={() => {\n              handleClose();\n              props.navigation(\"about\");\n            }}>{itemTwo}</MenuItem>\n            <MenuItem onClick={() => {\n              handleClose();\n              props.navigation(\"skills\");\n            }}>{itemThree}</MenuItem>\n            <MenuItem onClick={() => {\n              handleClose();\n              props.navigation(\"portfolio\");\n            }}>{itemFour}</MenuItem>\n            <MenuItem onClick={() => {\n              handleClose();\n              props.navigation(\"contact\");\n            }}>{itemFive}</MenuItem>\n          </Menu>\n          <Grow\n            in={true}\n            style={{ transformOrigin: '0 0 0' }}\n            {... { timeout: 1500 }}\n          >\n            <IconButton className={classes.collapse} aria-label=\"Open Website\" target=\"blank\" href=\"https://de.linkedin.com/in/julian-klummer-515a78170\">\n              <LinkedInIcon fontSize=\"large\" />\n            </IconButton>\n          </Grow>\n          {renderContactButton()}\n          <div className={classes.grow}></div>\n          <Grow\n            in={true}\n            style={{ transformOrigin: '0 0 0' }}\n            {... { timeout: 2500 }}\n          >\n            <IconButton onClick={changeTheme}>\n              <Brightness4Icon />\n              <FormControl>\n                <Switch\n                  color=\"default\"\n                  className={classes.collapse}\n                  checked={themeToggle}\n                  aria-label=\"theme-switch\"\n                  onChange={changeTheme} size=\"medium\" />\n              </FormControl>\n            </IconButton>\n          </Grow>\n          <Grow\n            in={true}\n            style={{ transformOrigin: '0 0 0' }}\n            {... { timeout: 3000 }}\n          >\n            <Box ml=\"3\">\n              <IconButton onClick={handleClick} aria-controls=\"language-menu\" aria-haspopup=\"true\">\n                <TranslateIcon className={classes.translateIcon} />\n                <Typography className={classes.collapse}>\n                  {languageLabel}\n                </Typography>\n              </IconButton>\n              <Menu\n                id=\"language-menu\"\n                anchorEl={anchorLanguageMenu}\n                keepMounted\n                open={Boolean(anchorLanguageMenu)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={() => {\n                  changeLanguage('en');\n                  handleClose();\n                }}>English</MenuItem>\n                <MenuItem onClick={() => {\n                  changeLanguage('de');\n                  handleClose();\n                }}>Deutsch</MenuItem>\n              </Menu>\n            </Box>\n          </Grow>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n",["95","96"],"/Users/julianklummer/WebProjects/personal-portfolio/src/languages/LanguageHelper.tsx",["97","98","99"],"import React, { useState, useContext, useMemo } from 'react';\nimport { dictionaryList } from './Language';\nimport { LanguageContextProvider, LanguageContext } from '../contexts/LanguageContext';\n\nexport const LanguageHelper: React.FC = (props) => {\n    const [userLanguage, setUserLanguage] = useState<'en' | 'de'>('en');\n\n    let dictionary = dictionaryList[userLanguage];\n\n    const languageMemo = useMemo(() => ({\n        userLanguage, setUserLanguage, dictionary\n    }), [userLanguage]);\n\n    return (\n        <LanguageContextProvider value={languageMemo}>\n            {props.children}\n        </LanguageContextProvider>\n    );\n}","/Users/julianklummer/WebProjects/personal-portfolio/src/contexts/LanguageContext.tsx",["100"],"import { createContext } from 'react';\n\ninterface Dictionary {\n    \"contactButton\": string,\n    \"start\": {\n      \"title\": string,\n      \"headline\": string,\n      \"description\": string\n    },\n    \"about\": {\n      \"title\": string,\n      \"description\": string[],\n      \"stations\": {\n        \"one\": {\n          title: string,\n          institution: string,\n          duration: string,\n          location: string,\n          icon: string,\n          link: string,\n          infos: string[]\n        },\n        \"two\": {\n          title: string,\n          institution: string,\n          duration: string,\n          location: string,\n          icon: string,\n          link: string,\n          infos: string[]\n        },\n        \"three\": {\n          title: string,\n          institution: string,\n          duration: string,\n          location: string,\n          icon: string,\n          link: string,\n          infos: string[]\n        }\n      }\n    },\n    \"skills\": {\n      \"title\": string,\n      \"skillCards\": {\n        \"one\": {\n          \"title\": string,\n          \"skills\": string[],\n          \"levels\": number[]\n        },\n        \"two\": {\n          \"title\": string,\n          \"skills\": string[],\n          \"levels\": number[]\n        },\n        \"three\": {\n          \"title\": string,\n          \"skills\": string[],\n          \"levels\": number[]\n        }\n      }\n    },\n    \"portfolio\": {\n      \"title\": string\n    },\n    \"contact\": {\n      \"title\": string,\n      \"mail\": string,\n      \"telephone\": string\n    },\n    \"legalNotice\": {\n      \"title\": string,\n      \"information\": string\n    }\n}\n\ninterface LanguageContext {\n  userLanguage: 'en' | 'de',\n  setUserLanguage: Function,\n  dictionary: Dictionary\n}\n\nexport const LanguageContext = createContext<LanguageContext | null>(null);\n\nexport const LanguageContextProvider = LanguageContext.Provider;\n\nexport const LanguageContextConsumer = LanguageContext.Consumer;\n","/Users/julianklummer/WebProjects/personal-portfolio/src/components/ContactButton.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/components/SkillCard.tsx",["101","102","103"],"import React, { useContext } from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\nimport { LanguageContext } from '../contexts/LanguageContext';\n\nconst Checked: React.FC = () => {\n  return <Brightness1Icon color=\"primary\" />;\n}\n\nconst Unchecked: React.FC = () => {\n  return <RadioButtonUncheckedIcon color=\"primary\" />;\n}\n\ninterface SkillCard {\n  skill: 'one' | 'two' | 'three'\n}\n\ninterface Data {\n  title: string,\n  skills: string[],\n  levels: number[]\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      maxWidth: 752,\n    }\n  }),\n);\n\nexport const SkillCard: React.FC<SkillCard> = (props) => {\n  const classes = useStyles();\n\n  const languageContext = useContext(LanguageContext);\n\n  let data: Data;\n  switch (props.skill) {\n    case \"one\":\n      data = languageContext?.dictionary.skills.skillCards.one!;\n      break;\n    case \"two\":\n      data = languageContext?.dictionary.skills.skillCards.two!;\n      break;\n    case \"three\":\n      data = languageContext?.dictionary.skills.skillCards.three!;\n      break;\n  }\n\n  const title = data.title;\n\n  const generateLevel = (key: number) => {\n\n    const levelDisplay = [];\n\n    for (let i = 0; i <= 4; i++) {\n      if (i < data.levels[key]) {\n        levelDisplay[i] = <Brightness1Icon color=\"primary\" />;\n      } else {\n        levelDisplay[i] = <RadioButtonUncheckedIcon color=\"primary\" />;\n      }\n    }\n\n    return levelDisplay;\n  }\n\n  const generateDivider = (key: number) => {\n    if((key + 1) < data.skills.length){\n      return (<Divider />);\n    } else {\n      return null;\n    }\n  }\n\n  const generateSkill = () => {\n    return data.skills.map((value) =>\n      <React.Fragment>\n        <ListItem>\n          <ListItemText\n            primary={value}\n          />\n          {generateLevel(data.skills.indexOf(value))}\n        </ListItem>\n        {generateDivider(data.skills.indexOf(value))}\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper elevation={3}>\n        <Box pt={2}>\n          <Typography variant=\"h4\" component=\"h3\" align=\"center\">\n            {title}\n          </Typography>\n        </Box>\n        <List>\n          {generateSkill()}\n        </List>\n      </Paper>\n    </div>\n  );\n}","/Users/julianklummer/WebProjects/personal-portfolio/src/App.tsx",["104","105"],"import React, { useRef, useState } from 'react';\nimport './css/App.scss';\nimport { BrowserRouter as Router, Switch, Route, Redirect, useLocation } from \"react-router-dom\";\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { Navbar } from './domain/navbar/Navbar';\nimport { BottomNav } from './domain/bottomnav/BottomNav';\nimport { ContactButton } from './components/ContactButton';\nimport { Start } from './domain/start/Start';\nimport { About } from './domain/about/About';\nimport { Skills } from './domain/skills/Skills';\nimport { Portfolio } from './domain/portfolio/Portfolio';\nimport { LegalNotice } from './domain/legalNotice/LegalNotice';\nimport { Contact } from './domain/contact/Contact';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    siteContainer: {\n      maxWidth: '1620px',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      left: 0\n    },\n    scrollContainer: {\n      overflow: 'scroll',\n      height: '100%',\n      width: '100%',\n      display: 'block',\n      position: 'absolute',\n    },\n    site: {\n      minHeight: '100vh',\n    }\n  })\n);\n\nconst App: React.FC = (props) => {\n  const classes = useStyles();\n\n  const scrollContainerRef = useRef<any>(null);\n\n  const startRef = useRef<any>(null);\n  const aboutRef = useRef<any>(null);\n  const skillsRef = useRef<any>(null);\n  const portfolioRef = useRef<any>(null);\n  const contactRef = useRef<any>(null);\n\n  const navigation = (target: \"start\" | \"about\" | \"skills\" | \"portfolio\" | \"contact\" | \"legalNotice\") => {\n\n    let headerOffset = 64;\n    switch (target) {\n      case \"start\": {\n        scrollContainerRef.current.scrollTo({\n          top: 0,\n          behavior: \"smooth\"\n        });\n        break;\n      }\n      case \"about\": {\n        let elementPosition = aboutRef.current.offsetTop;\n        let offsetPosition = elementPosition - headerOffset;\n        scrollContainerRef.current.scrollTo({\n          top: offsetPosition,\n          behavior: \"smooth\"\n        });\n        break;\n      }\n      case \"skills\": {\n        let elementPosition = skillsRef.current.offsetTop;\n        let offsetPosition = elementPosition - headerOffset;\n        scrollContainerRef.current.scrollTo({\n          top: offsetPosition,\n          behavior: \"smooth\"\n        });\n        break;\n      }\n      case \"portfolio\": {\n        let elementPosition = portfolioRef.current.offsetTop;\n        let offsetPosition = elementPosition - headerOffset;\n        scrollContainerRef.current.scrollTo({\n          top: offsetPosition,\n          behavior: \"smooth\"\n        });\n        break;\n      }\n      case \"contact\": {\n        let elementPosition = contactRef.current.offsetTop;\n        let offsetPosition = elementPosition - headerOffset;\n        scrollContainerRef.current.scrollTo({\n          top: offsetPosition,\n          behavior: \"smooth\"\n        });\n        break;\n      }\n    }\n  }\n\n  const [navbarBackground, setNavbarBackground] = useState<boolean>(false);\n\n  const handleScroll = (e: { target: any; }) => {\n    let element = e.target\n    if (element.scrollTop > 10) {\n      setNavbarBackground(true);\n    } else {\n      setNavbarBackground(false);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Router>\n        <div className={classes.scrollContainer} onScroll={handleScroll} ref={scrollContainerRef}>\n          <div className={classes.siteContainer}>\n            <Navbar navigation={navigation} siteContainer={classes.siteContainer} background={navbarBackground} />\n          </div>\n          <div className={classes.siteContainer}>\n            <Switch>\n              <Route exact path=\"/\">\n                <div id=\"scroll-content\">\n                  <div ref={startRef} className={classes.site}>\n                    <Start />\n                  </div>\n                  <div ref={aboutRef} className={classes.site}>\n                    <About />\n                  </div>\n                  <div ref={skillsRef} className={classes.site}>\n                    <Skills />\n                  </div>\n                  <div ref={portfolioRef} className={classes.site}>\n                    <Portfolio />\n                  </div>\n                  <div ref={contactRef} className={classes.site}>\n                    <Contact />\n                  </div>\n                </div>\n              </Route>\n              <Route exact path=\"/legal\">\n                <LegalNotice />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n        <div className={classes.siteContainer}>\n          <BottomNav>\n            <ContactButton navigation={navigation} />\n          </BottomNav>\n        </div>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;","/Users/julianklummer/WebProjects/personal-portfolio/src/languages/Language.tsx",["106","107"],"import en from './en.json';\nimport de from './de.json';\n\ninterface dictionaryList {\n  en: {\n    \"contactButton\": string,\n    \"start\": {\n      \"title\": string,\n      \"headline\": string,\n      \"description\": string\n    },\n    \"about\": {\n      \"title\": string,\n      \"description\": string[],\n      \"stations\": {\n        \"one\": {\n          title: string,\n          institution: string,\n          duration: string,\n          location: string,\n          icon: string,\n          link: string,\n          infos: string[]\n        },\n        \"two\": {\n          title: string,\n          institution: string,\n          duration: string,\n          location: string,\n          icon: string,\n          link: string,\n          infos: string[]\n        },\n        \"three\": {\n          title: string,\n          institution: string,\n          duration: string,\n          location: string,\n          icon: string,\n          link: string,\n          infos: string[]\n        }\n      }\n    },\n    \"skills\": {\n      \"title\": string,\n      \"skillCards\": {\n        \"one\": {\n          \"title\": string,\n          \"skills\": string[],\n          \"levels\": number[]\n        },\n        \"two\": {\n          \"title\": string,\n          \"skills\": string[],\n          \"levels\": number[]\n        },\n        \"three\": {\n          \"title\": string,\n          \"skills\": string[],\n          \"levels\": number[]\n        }\n      }\n    },\n    \"portfolio\": {\n      \"title\": string\n    },\n    \"contact\": {\n      \"title\": string,\n      \"mail\": string,\n      \"telephone\": string\n    },\n    \"legalNotice\": {\n      \"title\": string,\n      \"information\": string\n    }\n  },\n  de: {\n    \"contactButton\": string,\n    \"start\": {\n      \"title\": string,\n      \"headline\": string,\n      \"description\": string\n    },\n    \"about\": {\n      \"title\": string,\n      \"description\": string[],\n      \"stations\": {\n        \"one\": {\n          title: string,\n          institution: string,\n          duration: string,\n          location: string,\n          icon: string,\n          link: string,\n          infos: string[]\n        },\n        \"two\": {\n          title: string,\n          institution: string,\n          duration: string,\n          location: string,\n          icon: string,\n          link: string,\n          infos: string[]\n        },\n        \"three\": {\n          title: string,\n          institution: string,\n          duration: string,\n          location: string,\n          icon: string,\n          link: string,\n          infos: string[]\n        }\n      }\n    },\n    \"skills\": {\n      \"title\": string,\n      \"skillCards\": {\n        \"one\": {\n          \"title\": string,\n          \"skills\": string[],\n          \"levels\": number[]\n        },\n        \"two\": {\n          \"title\": string,\n          \"skills\": string[],\n          \"levels\": number[]\n        },\n        \"three\": {\n          \"title\": string,\n          \"skills\": string[],\n          \"levels\": number[]\n        }\n      }\n    },\n    \"portfolio\": {\n      \"title\": string\n    },\n    \"contact\": {\n      \"title\": string,\n      \"mail\": string,\n      \"telephone\": string\n    },\n    \"legalNotice\": {\n      \"title\": string,\n      \"information\": string\n    }\n  }\n}\n\nexport const dictionaryList = { en, de };","/Users/julianklummer/WebProjects/personal-portfolio/src/themes/Theme.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/skills/Skills.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/bottomnav/BottomNav.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/themes/ThemeHelper.tsx",["108"],"import React, { useState, useEffect, useMemo } from 'react';\nimport { useStyles, getTheme, light, dark } from './Theme';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { ThemeContextProvider } from '../contexts/ThemeContext';\n\nexport const ThemeHelper: React.FC = (props) => {\n  const [deviceTheme, setDeviceTheme] = useState('dark');\n  const [theme, setTheme] = useState<'light' | 'dark'>('dark');\n  const [appliedTheme, setAppliedTheme] = useState(getTheme(dark));\n\n  const themeMemo = useMemo(() => ({ theme, setTheme }), [theme, setTheme]);\n\n  const classes = useStyles();\n\n  const deviceLightTheme = useMediaQuery('(prefers-color-scheme: light)');\n  // Default theme mode by device\n  useEffect(() => {\n    if (deviceLightTheme) {\n      setDeviceTheme('light');\n    } else {\n      setDeviceTheme('dark');\n    }\n  });\n\n  // Changes theme mode if device preference changes\n  useEffect(() => {\n    if (deviceTheme === 'light') {\n      setTheme('light');\n    } else {\n      setTheme('dark');\n    }\n  }, [deviceTheme]);\n\n  // Change theme onsite\n  useEffect(() => {\n    if (theme === 'light') {\n      setAppliedTheme(getTheme(light));\n    } else {\n      setAppliedTheme(getTheme(dark));\n    }\n  }, [theme]);\n\n  return (\n    <div className={theme === 'light' ? classes.backgroundLight : classes.backgroundDark}>\n      <ThemeProvider theme={appliedTheme}>\n        <ThemeContextProvider value={themeMemo}>\n          {props.children}\n        </ThemeContextProvider>\n        <CssBaseline />\n      </ThemeProvider>\n    </div>\n  );\n}",["109","110"],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/start/Start.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/about/About.tsx",["111"],"import React, { useContext } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport { Typography } from '@material-ui/core';\nimport { LanguageContext } from '../../contexts/LanguageContext';\nimport { StationCard } from '../../components/StationCard';\nimport IMGProfil from '../../assets/images/about/profil.jpg';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        img: {\n            width: '100%',\n            height: 'auto',\n            borderRadius: '50%',\n            overflow: 'hidden'\n        },\n        typo: {\n            marginBottom: 20\n        },\n        headline: {\n            [theme.breakpoints.down('sm')]: {\n              fontSize: '4em',\n            }\n        }\n    }),\n);\n\nexport const About: React.FC = () => {\n    const classes = useStyles();\n\n    const languageContext = useContext(LanguageContext);\n\n    const title = languageContext?.dictionary.about.title!;\n    const description = languageContext?.dictionary.about.description!;\n    const stations = languageContext?.dictionary.about.stations!;\n\n    return (\n        <Box m={4}>\n            <div className={classes.root}>\n                <Box mb={3}>\n                    <Typography component=\"h2\" variant=\"h1\" color=\"textPrimary\" className={classes.headline}>{title}</Typography>\n                </Box>\n                <Grid container spacing={3} justify=\"center\">\n                    <Grid item lg={3} md={5} sm={10} xs={12}>\n                        <img src={IMGProfil} alt=\"Julian Klummer\" className={classes.img}></img>\n                    </Grid>\n                    <Grid item lg={4} md={5} sm={10} xs={12}>\n                        <Typography component=\"p\" variant=\"body1\" color=\"textPrimary\" className={classes.typo}>\n                            {description[0]}\n                        </Typography>\n                        <Typography component=\"p\" variant=\"body1\" color=\"textPrimary\" className={classes.typo}>\n                            {description[1]}\n                        </Typography>\n                        <Typography component=\"p\" variant=\"body1\" color=\"textPrimary\" className={classes.typo}>\n                            {description[2]}\n                        </Typography>\n                    </Grid>\n                    <Grid item lg={5} md={10} sm={10} xs={12}>\n                        <StationCard station={\"one\"} />\n                        <StationCard station={\"two\"} />\n                        <StationCard station={\"three\"} />\n                    </Grid>\n                </Grid>\n            </div>\n        </Box>\n    );\n}","/Users/julianklummer/WebProjects/personal-portfolio/src/components/StationCard.tsx",["112","113"],"import React, { useContext } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { LanguageContext } from '../contexts/LanguageContext';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport SchoolIcon from '@material-ui/icons/School';\nimport WorkIcon from '@material-ui/icons/Work';\nimport Divider from '@material-ui/core/Divider';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\ninterface Props {\n    station: 'one' | 'two' | 'three'\n}\n\ninterface Data {\n    title: string,\n    institution: string,\n    duration: string,\n    location: string,\n    icon: string,\n    link: string,\n    infos: string[]\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n            maxWidth: 752,\n        },\n        stationHeadline: {\n            paddingTop: 10\n        },\n        avatar: {\n            backgroundColor: theme.palette.primary.main\n        },\n        expand: {\n            transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n                duration: theme.transitions.duration.shortest,\n            }),\n        },\n        expandOpen: {\n            transform: 'rotate(180deg)',\n        }\n    }),\n);\n\nexport const StationCard: React.FC<Props> = (props) => {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    const languageContext = useContext(LanguageContext);\n\n    let data: Data;\n    switch (props.station) {\n        case \"one\":\n            data = languageContext?.dictionary.about.stations.one!;\n            break;\n        case \"two\":\n            data = languageContext?.dictionary.about.stations.two!;\n            break;\n        case \"three\":\n            data = languageContext?.dictionary.about.stations.three!;\n            break;\n    }\n\n    const generateIcon = () => {\n        switch (data.icon) {\n            case \"WorkIcon\":\n                return <WorkIcon fontSize=\"large\" />;\n                break;\n            case \"SchoolIcon\":\n                return <SchoolIcon fontSize=\"large\" />;\n                break;\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <Box mb={4}>\n                <Paper elevation={3}>\n                    <Card>\n                        <CardHeader\n                            avatar={\n                                <Avatar aria-label=\"Education\" className={classes.avatar}>\n                                    {generateIcon()}\n                                </Avatar>\n                            }\n                            title={\n                                <Typography gutterBottom variant=\"body1\" component=\"h2\">\n                                    {data.title}\n                                </Typography>\n                            }\n                            subheader={\n                                <div>\n                                    <Grid container spacing={6} justify=\"flex-start\">\n                                        <Grid item xs={7}>\n                                            <Typography gutterBottom variant=\"body2\" component=\"h2\">\n                                                {data.institution}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={5}>\n                                            <Typography gutterBottom variant=\"body2\" component=\"h2\" align=\"right\">\n                                                {data.duration}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                    <Typography gutterBottom variant=\"body2\" component=\"h2\">\n                                        <LocationOnIcon fontSize=\"small\" /> {data.location}\n                                    </Typography>\n                                </div>\n                            }\n                        />\n                        <Divider />\n                        <CardActions disableSpacing>\n                            <IconButton aria-label=\"Open Website\" target=\"blank\" href={data.link}>\n                                <OpenInNewIcon fontSize=\"small\" />\n                            </IconButton>\n                            <IconButton\n                                className={clsx(classes.expand, {\n                                    [classes.expandOpen]: expanded,\n                                })}\n                                onClick={handleExpandClick}\n                                aria-expanded={expanded}\n                                aria-label=\"show more\"\n                            >\n                                <ExpandMoreIcon />\n                            </IconButton>\n                        </CardActions>\n                        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                            <CardContent>\n                                <List dense>\n                                    {data.infos.map((info) => (\n                                        <ListItem>\n                                            <ListItemText primary={info} />\n                                        </ListItem>\n                                    ))}\n                                </List>\n                            </CardContent>\n                        </Collapse>\n                    </Card>\n                </Paper>\n            </Box>\n        </div>\n    );\n}","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/contact/Contact.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/portfolio/Portfolio.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/legalNotice/LegalNotice.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/contexts/ThemeContext.tsx",["114","115","116"],{"ruleId":"117","severity":1,"message":"118","line":6,"column":8,"nodeType":"119","messageId":"120","endLine":6,"endColumn":23},{"ruleId":"117","severity":1,"message":"121","line":1,"column":50,"nodeType":"119","messageId":"120","endLine":1,"endColumn":56},{"ruleId":"117","severity":1,"message":"122","line":12,"column":8,"nodeType":"119","messageId":"120","endLine":12,"endColumn":14},{"ruleId":"117","severity":1,"message":"123","line":20,"column":10,"nodeType":"119","messageId":"120","endLine":20,"endColumn":17},{"ruleId":"117","severity":1,"message":"124","line":97,"column":9,"nodeType":"119","messageId":"120","endLine":97,"endColumn":16},{"ruleId":"125","severity":1,"message":"126","line":129,"column":3,"nodeType":"119","endLine":129,"endColumn":12,"suggestions":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"117","severity":1,"message":"132","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":37},{"ruleId":"117","severity":1,"message":"133","line":3,"column":35,"nodeType":"119","messageId":"120","endLine":3,"endColumn":50},{"ruleId":"125","severity":1,"message":"134","line":12,"column":9,"nodeType":"135","endLine":12,"endColumn":23,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":83,"column":14,"nodeType":"119","messageId":"139","endLine":83,"endColumn":29},{"ruleId":"117","severity":1,"message":"140","line":14,"column":7,"nodeType":"119","messageId":"120","endLine":14,"endColumn":24},{"ruleId":"117","severity":1,"message":"141","line":18,"column":7,"nodeType":"119","messageId":"120","endLine":18,"endColumn":26},{"ruleId":"137","severity":1,"message":"142","line":41,"column":14,"nodeType":"119","messageId":"139","endLine":41,"endColumn":44},{"ruleId":"117","severity":1,"message":"143","line":3,"column":50,"nodeType":"119","messageId":"120","endLine":3,"endColumn":58},{"ruleId":"117","severity":1,"message":"144","line":3,"column":60,"nodeType":"119","messageId":"120","endLine":3,"endColumn":71},{"ruleId":"137","severity":1,"message":"145","line":153,"column":14,"nodeType":"119","messageId":"139","endLine":153,"endColumn":28},{"ruleId":"117","severity":1,"message":"146","line":153,"column":14,"nodeType":"119","messageId":"120","endLine":153,"endColumn":28},{"ruleId":"125","severity":1,"message":"147","line":19,"column":3,"nodeType":"119","endLine":19,"endColumn":12,"suggestions":"148"},{"ruleId":"128","replacedBy":"149"},{"ruleId":"130","replacedBy":"150"},{"ruleId":"117","severity":1,"message":"151","line":40,"column":11,"nodeType":"119","messageId":"120","endLine":40,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":93,"column":17,"nodeType":"154","messageId":"155","endLine":93,"endColumn":23},{"ruleId":"152","severity":1,"message":"153","line":96,"column":17,"nodeType":"154","messageId":"155","endLine":96,"endColumn":23},{"ruleId":"117","severity":1,"message":"156","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":13},{"ruleId":"117","severity":1,"message":"157","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"137","severity":1,"message":"158","line":8,"column":14,"nodeType":"119","messageId":"139","endLine":8,"endColumn":26},"@typescript-eslint/no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'Button' is defined but never used.","'NavLink' is defined but never used.","'itemSix' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setThemeToggle'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [themeContext] as a second argument to the useEffect Hook.",["159"],"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"'useContext' is defined but never used.","'LanguageContext' is defined but never used.","React Hook useMemo has a missing dependency: 'dictionary'. Either include it or remove the dependency array.","ArrayExpression",["162"],"@typescript-eslint/no-redeclare","'LanguageContext' is already defined.","redeclared","'Checked' is assigned a value but never used.","'Unchecked' is assigned a value but never used.","'SkillCard' is already defined.","'Redirect' is defined but never used.","'useLocation' is defined but never used.","'dictionaryList' is already defined.","'dictionaryList' is assigned a value but never used.","React Hook useEffect contains a call to 'setDeviceTheme'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [deviceLightTheme] as a second argument to the useEffect Hook.",["163"],["160"],["161"],"'stations' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'React' is defined but never used.","'useState' is defined but never used.","'ThemeContext' is already defined.",{"desc":"164","fix":"165"},"no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Add dependencies array: [themeContext]",{"range":"170","text":"171"},"Update the dependencies array to be: [dictionary, userLanguage]",{"range":"172","text":"173"},"Add dependencies array: [deviceLightTheme]",{"range":"174","text":"175"},[4600,4600],", [themeContext]",[475,489],"[dictionary, userLanguage]",[946,946],", [deviceLightTheme]"]