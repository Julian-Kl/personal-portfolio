[{"/Users/julianklummer/WebProjects/personal-portfolio/src/index.tsx":"1","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/navbar/Navbar.tsx":"2","/Users/julianklummer/WebProjects/personal-portfolio/src/languages/LanguageHelper.tsx":"3","/Users/julianklummer/WebProjects/personal-portfolio/src/contexts/LanguageContext.tsx":"4","/Users/julianklummer/WebProjects/personal-portfolio/src/components/ContactButton.tsx":"5","/Users/julianklummer/WebProjects/personal-portfolio/src/domain/about/about.tsx":"6","/Users/julianklummer/WebProjects/personal-portfolio/src/components/SkillCard.tsx":"7","/Users/julianklummer/WebProjects/personal-portfolio/src/App.tsx":"8","/Users/julianklummer/WebProjects/personal-portfolio/src/languages/Language.tsx":"9","/Users/julianklummer/WebProjects/personal-portfolio/src/themes/Theme.tsx":"10"},{"size":658,"mtime":1608559114265,"results":"11","hashOfConfig":"12"},{"size":5331,"mtime":1608550361610,"results":"13","hashOfConfig":"12"},{"size":633,"mtime":1608553785291,"results":"14","hashOfConfig":"12"},{"size":534,"mtime":1608558495534,"results":"15","hashOfConfig":"12"},{"size":1018,"mtime":1608558939094,"results":"16","hashOfConfig":"12"},{"size":2269,"mtime":1608553994266,"results":"17","hashOfConfig":"12"},{"size":1203,"mtime":1608559272639,"results":"18","hashOfConfig":"12"},{"size":945,"mtime":1608559130039,"results":"19","hashOfConfig":"12"},{"size":458,"mtime":1608558507369,"results":"20","hashOfConfig":"12"},{"size":1542,"mtime":1608477504156,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1anzr79",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/julianklummer/WebProjects/personal-portfolio/src/index.tsx",["43"],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/navbar/Navbar.tsx",["44"],"/Users/julianklummer/WebProjects/personal-portfolio/src/languages/LanguageHelper.tsx",["45","46","47"],"import React, { useState, useContext, useMemo } from 'react';\nimport { dictionaryList } from './Language';\nimport { LanguageContextProvider, LanguageContext } from '../contexts/LanguageContext';\n\nexport const LanguageHelper: React.FC = (props) => {\n    const [userLanguage, setUserLanguage] = useState<'en' | 'de'>('en');\n\n    let dictionary = dictionaryList[userLanguage];\n\n    const languageMemo = useMemo(() => ({\n        userLanguage, setUserLanguage, dictionary\n    }), [userLanguage]);\n\n    return (\n        <LanguageContextProvider value={languageMemo}>\n            {props.children}\n        </LanguageContextProvider>\n    );\n}","/Users/julianklummer/WebProjects/personal-portfolio/src/contexts/LanguageContext.tsx",["48"],"/Users/julianklummer/WebProjects/personal-portfolio/src/components/ContactButton.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/domain/about/about.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/components/SkillCard.tsx",["49"],"/Users/julianklummer/WebProjects/personal-portfolio/src/App.tsx",[],"/Users/julianklummer/WebProjects/personal-portfolio/src/languages/Language.tsx",["50","51"],"/Users/julianklummer/WebProjects/personal-portfolio/src/themes/Theme.tsx",[],{"ruleId":"52","severity":1,"message":"53","line":6,"column":8,"nodeType":"54","messageId":"55","endLine":6,"endColumn":23},{"ruleId":"56","severity":1,"message":"57","line":86,"column":3,"nodeType":"54","endLine":86,"endColumn":12,"suggestions":"58"},{"ruleId":"52","severity":1,"message":"59","line":1,"column":27,"nodeType":"54","messageId":"55","endLine":1,"endColumn":37},{"ruleId":"52","severity":1,"message":"60","line":3,"column":35,"nodeType":"54","messageId":"55","endLine":3,"endColumn":50},{"ruleId":"56","severity":1,"message":"61","line":12,"column":9,"nodeType":"62","endLine":12,"endColumn":23,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":19,"column":14,"nodeType":"54","messageId":"66","endLine":19,"endColumn":29},{"ruleId":"52","severity":1,"message":"67","line":23,"column":9,"nodeType":"54","messageId":"55","endLine":23,"endColumn":16},{"ruleId":"64","severity":1,"message":"68","line":25,"column":14,"nodeType":"54","messageId":"66","endLine":25,"endColumn":28},{"ruleId":"52","severity":1,"message":"69","line":25,"column":14,"nodeType":"54","messageId":"55","endLine":25,"endColumn":28},"@typescript-eslint/no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setThemeToggle'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [themeContext] as a second argument to the useEffect Hook.",["70"],"'useContext' is defined but never used.","'LanguageContext' is defined but never used.","React Hook useMemo has a missing dependency: 'dictionary'. Either include it or remove the dependency array.","ArrayExpression",["71"],"@typescript-eslint/no-redeclare","'LanguageContext' is already defined.","redeclared","'classes' is assigned a value but never used.","'dictionaryList' is already defined.","'dictionaryList' is assigned a value but never used.",{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},"Add dependencies array: [themeContext]",{"range":"76","text":"77"},"Update the dependencies array to be: [dictionary, userLanguage]",{"range":"78","text":"79"},[3104,3104],", [themeContext]",[475,489],"[dictionary, userLanguage]"]